# https://taskfile.dev

version: "3"

vars:
  BUILDER_NAME: buildx-multi-arch
  COSIGN_VERSION: 2.0.0
  HELM_VERSION: 3.11.2
  CRANE_VERSION: 0.14.0
  FLUX_VERSION: 0.41.2
  KO_VERSION: 0.13.0
  KUBECTL_VERSION: 1.24.12
  KUSTOMIZE_VERSION: 5.0.1

tasks:
  default:
    cmds:
      - task: download_tools
    silent: true

  build:
    silent: true
    desc: build tools image
    aliases:
      - build
    cmds:
      - docker buildx inspect {{.BUILDER_NAME}} || docker buildx create --name={{.BUILDER_NAME}} --driver=docker-container --driver-opt=network=host
      - docker buildx build --builder={{.BUILDER_NAME}} --push -t ghcr.io/kameshsampath/kube-dev-tools --platform=linux/arm64 --platform=linux/amd64 -f Dockerfile {{.ROOT_DIR}}

  download_tools:
    silent: true
    cmds:
      - mkdir -p /tools/bin
      - task: downloads_arm64
      - task: downloads_amd64
      - curl -sSL -o /tools/bin/kubens https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens && chmod +x /tools/bin/kubens
      - curl -sSL -o /tools/bin/kubectx https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx && chmod +x /tools/bin/kubectx
      - chmod +x /tools/bin/*

  downloads_arm64:
    silent: false
    internal: true
    platforms:
      - "linux/arm64"
    cmds:
      # argocd
      - curl -sSL -o /tools/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-arm64
      # cosign
      - curl -sSL -o /tools/bin/cosign "https://github.com/sigstore/cosign/releases/download/v{{.COSIGN_VERSION}}/cosign-linux-arm64"
      # crane
      - curl -sSL "https://github.com/google/go-containerregistry/releases/download/v{{.CRANE_VERSION}}/go-containerregistry_Linux_arm64.tar.gz" -o - | tar zx -C /tools/bin/ crane
      # flux
      - curl -sSL https://github.com/fluxcd/flux2/releases/download/v{{.FLUX_VERSION}}/flux_{{.FLUX_VERSION}}_linux_arm64.tar.gz -o - | tar zx -C /tools/bin/ flux
      # Helm
      - curl -sSL https://get.helm.sh/helm-v{{.HELM_VERSION}}-linux-arm64.tar.gz -o - | tar zx --strip-components=1 -C /tools/bin linux-arm64/helm
      # ko
      - curl -sSL "https://github.com/ko-build/ko/releases/download/v{{.KO_VERSION}}/ko_{{.KO_VERSION}}_Linux_arm64.tar.gz" -o - | tar zx -C /tools/bin ko
      # kubectl
      - curl -sSL https://storage.googleapis.com/kubernetes-release/release/v{{.KUBECTL_VERSION}}/bin/linux/arm64/kubectl -o /tools/bin/kubectl
      # kustomize
      - curl -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv{{.KUSTOMIZE_VERSION}}/kustomize_v{{.KUSTOMIZE_VERSION}}_linux_arm64.tar.gz -o - | tar zx -C /tools/bin

  downloads_amd64:
    silent: false
    internal: true
    platforms:
      - "linux/amd64"
    cmds:
      # argocd
      - curl -sSL -o /tools/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      # cosign
      - curl -sSL -o /tools/bin/cosign "https://github.com/sigstore/cosign/releases/download/v{{.COSIGN_VERSION}}/cosign-linux-amd64"
      # crane
      - curl -sSL "https://github.com/google/go-containerregistry/releases/download/v{{.CRANE_VERSION}}/go-containerregistry_Linux_x86_64.tar.gz" -o - | tar zx -C /tools/bin/ crane
      # flux
      - curl -sSL https://github.com/fluxcd/flux2/releases/download/v{{.FLUX_VERSION}}/flux_{{.FLUX_VERSION}}_linux_amd64.tar.gz -o - | tar zx -C /tools/bin/ flux
      # Helm
      - curl -sSL https://get.helm.sh/helm-v{{.HELM_VERSION}}-linux-amd64.tar.gz -o - | tar zx --strip-components=1 -C /tools/bin linux-amd64/helm
      # ko
      - curl -sSL "https://github.com/ko-build/ko/releases/download/v{{.KO_VERSION}}/ko_{{.KO_VERSION}}_Linux_x86_64.tar.gz" -o - | tar zx -C /tools/bin ko
      # kubectl
      - curl -sSL https://storage.googleapis.com/kubernetes-release/release/v{{.KUBECTL_VERSION}}/bin/linux/amd64/kubectl -o /tools/bin/kubectl
      # kustomize
      - curl -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv{{.KUSTOMIZE_VERSION}}/kustomize_v{{.KUSTOMIZE_VERSION}}_linux_amd64.tar.gz -o - | tar zx -C /tools/bin
